{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jade9\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\dd\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Cell from \"./Cell\";\nimport { getInitialBoard, getRandomTetromino, checkCollision, mergeTetromino, clearLines, nextPosition } from \"../utils/tetris\";\nimport styles from \"./Board.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 20;\nconst COLS = 10;\nconst INTERVAL = 500;\nfunction Board() {\n  _s();\n  const [board, setBoard] = useState(getInitialBoard(ROWS, COLS));\n  const [current, setCurrent] = useState(getRandomTetromino(COLS));\n  const [next, setNext] = useState(getRandomTetromino(COLS));\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const intervalRef = useRef();\n  useEffect(() => {\n    if (gameOver) return;\n    intervalRef.current = setInterval(() => {\n      move(\"down\");\n    }, INTERVAL);\n    return () => clearInterval(intervalRef.current);\n    // eslint-disable-next-line\n  }, [current, gameOver]);\n  const move = dir => {\n    if (gameOver) return;\n    const {\n      tetromino,\n      pos\n    } = current;\n    const newPos = nextPosition(pos, dir);\n    if (!checkCollision(board, tetromino, newPos)) {\n      setCurrent({\n        ...current,\n        pos: newPos\n      });\n    } else if (dir === \"down\") {\n      const merged = mergeTetromino(board, tetromino, pos);\n      const {\n        newBoard,\n        cleared\n      } = clearLines(merged);\n      setBoard(newBoard);\n      setScore(s => s + cleared * 100);\n      if (pos.y <= 0) {\n        setGameOver(true);\n        clearInterval(intervalRef.current);\n      } else {\n        setCurrent(next);\n        setNext(getRandomTetromino(COLS));\n      }\n    }\n  };\n  const rotate = () => {\n    if (gameOver) return;\n    const {\n      tetromino,\n      pos\n    } = current;\n    const rotated = tetromino[0].map((_, i) => tetromino.map(row => row[i]).reverse());\n    if (!checkCollision(board, rotated, pos)) {\n      setCurrent({\n        ...current,\n        tetromino: rotated\n      });\n    }\n  };\n  const handleKeyDown = e => {\n    if (gameOver) return;\n    if (e.key === \"ArrowLeft\") move(\"left\");else if (e.key === \"ArrowRight\") move(\"right\");else if (e.key === \"ArrowDown\") move(\"down\");else if (e.key === \"ArrowUp\") rotate();else if (e.key === \" \") {\n      // Hard drop\n      let {\n        tetromino,\n        pos\n      } = current;\n      let dropPos = {\n        ...pos\n      };\n      while (!checkCollision(board, tetromino, {\n        ...dropPos,\n        y: dropPos.y + 1\n      })) {\n        dropPos.y += 1;\n      }\n      setCurrent({\n        ...current,\n        pos: dropPos\n      });\n      move(\"down\");\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n    // eslint-disable-next-line\n  }, [current, board, gameOver]);\n  const restart = () => {\n    setBoard(getInitialBoard(ROWS, COLS));\n    setCurrent(getRandomTetromino(COLS));\n    setNext(getRandomTetromino(COLS));\n    setScore(0);\n    setGameOver(false);\n  };\n\n  // 현재 블록을 보드에 임시로 합쳐서 렌더링\n  const displayBoard = mergeTetromino(board, current.tetromino, current.pos, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.boardWrap,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.info,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC810\\uC218: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uB2E4\\uC74C \\uBE14\\uB85D:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.next,\n        children: next.tetromino.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.nextRow,\n          children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: cell ? styles[`color${next.color}`] : styles.empty\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.board,\n      children: [displayBoard.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.row,\n        children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(Cell, {\n          value: cell\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gameOver,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uAC8C\\uC784 \\uC624\\uBC84\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: restart,\n          children: \"\\uB2E4\\uC2DC \\uC2DC\\uC791\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"7kMlLbfxxBxvml9NImq5HnDST0I=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Cell","getInitialBoard","getRandomTetromino","checkCollision","mergeTetromino","clearLines","nextPosition","styles","jsxDEV","_jsxDEV","ROWS","COLS","INTERVAL","Board","_s","board","setBoard","current","setCurrent","next","setNext","score","setScore","gameOver","setGameOver","intervalRef","setInterval","move","clearInterval","dir","tetromino","pos","newPos","merged","newBoard","cleared","s","y","rotate","rotated","map","_","i","row","reverse","handleKeyDown","e","key","dropPos","window","addEventListener","removeEventListener","restart","displayBoard","className","boardWrap","children","info","fileName","_jsxFileName","lineNumber","columnNumber","nextRow","cell","j","color","empty","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jade9/OneDrive/바탕 화면/dd/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport { getInitialBoard, getRandomTetromino, checkCollision, mergeTetromino, clearLines, nextPosition } from \"../utils/tetris\";\r\nimport styles from \"./Board.module.css\";\r\n\r\nconst ROWS = 20;\r\nconst COLS = 10;\r\nconst INTERVAL = 500;\r\n\r\nfunction Board() {\r\n  const [board, setBoard] = useState(getInitialBoard(ROWS, COLS));\r\n  const [current, setCurrent] = useState(getRandomTetromino(COLS));\r\n  const [next, setNext] = useState(getRandomTetromino(COLS));\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const intervalRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (gameOver) return;\r\n    intervalRef.current = setInterval(() => {\r\n      move(\"down\");\r\n    }, INTERVAL);\r\n    return () => clearInterval(intervalRef.current);\r\n    // eslint-disable-next-line\r\n  }, [current, gameOver]);\r\n\r\n  const move = (dir) => {\r\n    if (gameOver) return;\r\n    const { tetromino, pos } = current;\r\n    const newPos = nextPosition(pos, dir);\r\n    if (!checkCollision(board, tetromino, newPos)) {\r\n      setCurrent({ ...current, pos: newPos });\r\n    } else if (dir === \"down\") {\r\n      const merged = mergeTetromino(board, tetromino, pos);\r\n      const { newBoard, cleared } = clearLines(merged);\r\n      setBoard(newBoard);\r\n      setScore((s) => s + cleared * 100);\r\n      if (pos.y <= 0) {\r\n        setGameOver(true);\r\n        clearInterval(intervalRef.current);\r\n      } else {\r\n        setCurrent(next);\r\n        setNext(getRandomTetromino(COLS));\r\n      }\r\n    }\r\n  };\r\n\r\n  const rotate = () => {\r\n    if (gameOver) return;\r\n    const { tetromino, pos } = current;\r\n    const rotated = tetromino[0].map((_, i) => tetromino.map(row => row[i]).reverse());\r\n    if (!checkCollision(board, rotated, pos)) {\r\n      setCurrent({ ...current, tetromino: rotated });\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (gameOver) return;\r\n    if (e.key === \"ArrowLeft\") move(\"left\");\r\n    else if (e.key === \"ArrowRight\") move(\"right\");\r\n    else if (e.key === \"ArrowDown\") move(\"down\");\r\n    else if (e.key === \"ArrowUp\") rotate();\r\n    else if (e.key === \" \") {\r\n      // Hard drop\r\n      let { tetromino, pos } = current;\r\n      let dropPos = { ...pos };\r\n      while (!checkCollision(board, tetromino, { ...dropPos, y: dropPos.y + 1 })) {\r\n        dropPos.y += 1;\r\n      }\r\n      setCurrent({ ...current, pos: dropPos });\r\n      move(\"down\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n    // eslint-disable-next-line\r\n  }, [current, board, gameOver]);\r\n\r\n  const restart = () => {\r\n    setBoard(getInitialBoard(ROWS, COLS));\r\n    setCurrent(getRandomTetromino(COLS));\r\n    setNext(getRandomTetromino(COLS));\r\n    setScore(0);\r\n    setGameOver(false);\r\n  };\r\n\r\n  // 현재 블록을 보드에 임시로 합쳐서 렌더링\r\n  const displayBoard = mergeTetromino(board, current.tetromino, current.pos, true);\r\n\r\n  return (\r\n    <div className={styles.boardWrap}>\r\n      <div className={styles.info}>\r\n        <div>점수: {score}</div>\r\n        <div>다음 블록:</div>\r\n        <div className={styles.next}>\r\n          {next.tetromino.map((row, i) => (\r\n            <div key={i} className={styles.nextRow}>\r\n              {row.map((cell, j) => (\r\n                <span key={j} className={cell ? styles[`color${next.color}`] : styles.empty}></span>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className={styles.board}>\r\n        {displayBoard.map((row, i) => (\r\n          <div key={i} className={styles.row}>\r\n            {row.map((cell, j) => (\r\n              <Cell key={j} value={cell} />\r\n            ))}\r\n          </div>\r\n        ))}\r\n        {gameOver && (\r\n          <div className={styles.gameOver}>\r\n            <div>게임 오버</div>\r\n            <button onClick={restart}>다시 시작</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}